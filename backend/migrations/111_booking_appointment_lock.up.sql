CREATE TABLE IF NOT EXISTS appointment_locks (
  id           SERIAL PRIMARY KEY,

  tenant_id    INT NOT NULL,                    -- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö multi-tenant
  branch_id    INT NOT NULL,                    -- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ FK ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏µ‡∏Å‡πÇ‡∏°‡∏î‡∏π‡∏•
  barber_id    INT NOT NULL,                    -- FK ‚Üí barbers.id (internal)
  customer_id  INT NOT NULL,                    -- FK ‚Üí customers.id (internal)

  start_time   TIMESTAMPTZ NOT NULL,
  end_time     TIMESTAMPTZ NOT NULL,
  expires_at   TIMESTAMPTZ NOT NULL,            -- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ lock

  is_active    BOOLEAN NOT NULL DEFAULT TRUE,   -- ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

  created_at   TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at   TIMESTAMPTZ NOT NULL DEFAULT now(),

  -- üîó Constraints
  CONSTRAINT fk_locks_barber
    FOREIGN KEY (barber_id)
    REFERENCES barbers(id)
    ON DELETE CASCADE,

  CONSTRAINT fk_locks_customer
    FOREIGN KEY (customer_id)
    REFERENCES customers(id)
    ON DELETE CASCADE
);


-- ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ + barber_id ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ slot ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
CREATE INDEX IF NOT EXISTS idx_locks_barber_time
  ON appointment_locks(barber_id, start_time, end_time);

-- ‡πÉ‡∏ä‡πâ tenant + branch + barber ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
CREATE INDEX IF NOT EXISTS idx_locks_tenant_branch_barber_time
  ON appointment_locks(tenant_id, branch_id, barber_id, start_time, end_time);

-- ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö query active locks
CREATE INDEX IF NOT EXISTS idx_locks_is_active_expires_at
  ON appointment_locks(is_active, expires_at);